@page
@model Atlas_Web.Pages.Users.StarsModel

@{
    Layout = null;
    ViewBag.IsMe = (@Model.UserId == User.GetUserId());
    var hasReports = Model.Reports.Any();
    var hasCollections = Model.Collections.Any();
    var hasInitiatives = Model.Initiatives.Any();
    var hasTerms =  Model.Terms.Any();
    var hasUsers =  Model.Users.Any();
    var hasSearches =  Model.Searches.Any();
    var hasGroups = Model.Groups.Any();
}
<div>
    @if (hasReports || hasCollections || hasInitiatives || hasTerms || hasUsers || hasSearches || hasGroups)
    {
        <section class="section my-4 p-0 is-flex is-flex-direction-row is-align-items-center">

            <div class="icon-text mr-4">
                <span class="icon">
                    <i class="fas fa-filter"></i>
                </span>
                <strong>Quick Filter</strong>
            </div>
            <div class="control has-icons-left mr-5">
                <input class="input favorites-filter" type="email" placeholder="type to filter...">
                <span class="icon is-small is-left">
                    <i class="fas fa-magnifying-glass"></i>
                </span>
            </div>

            @if(hasReports && (hasCollections || hasInitiatives||hasTerms || hasUsers|| hasSearches|| hasGroups)){
                <a class="button is-warning is-outlined has-text-dark favorites-filter mr-5" data-type="report">
                    <span class="icon">
                        <i class="fas fa-chart-bar"></i>
                    </span>
                    <span>Reports</span>
                </a>
            }
            @if(hasCollections && (hasReports || hasInitiatives||hasTerms || hasUsers|| hasSearches|| hasGroups)){
                <a class="button is-warning is-outlined has-text-dark favorites-filter mr-5" data-type="collection">
                    <span class="icon">
                        <i class="fas fa-diagram-project"></i>
                    </span>
                    <span>Collections</span>
                </a>
             }
             @if(hasInitiatives&& (hasReports || hasCollections ||hasTerms || hasUsers|| hasSearches|| hasGroups)){
                <a class="button is-warning is-outlined has-text-dark favorites-filter mr-5" data-type="initiative">
                    <span class="icon">
                        <i class="fas fa-lightbulb"></i>
                    </span>
                    <span>Initiatives</span>
                </a>
            }
            @if(hasTerms && (hasReports || hasCollections || hasInitiatives|| hasUsers|| hasSearches|| hasGroups)){
                <a class="button is-warning is-outlined has-text-dark favorites-filter mr-5" data-type="term">
                    <span class="icon">
                        <i class="fas fa-book"></i>
                    </span>
                    <span>Terms</span>
                </a>
           }
           @if(hasUsers && (hasReports || hasCollections || hasInitiatives||hasTerms || hasSearches|| hasGroups)){
                <a class="button is-warning is-outlined has-text-dark favorites-filter mr-5" data-type="user">
                    <span class="icon">
                        <i class="fas fa-user"></i>
                    </span>
                    <span>Users</span>
                </a>
            }
            @if(hasGroups && (hasReports || hasCollections || hasInitiatives||hasTerms || hasSearches|| hasUsers)){
                <a class="button is-warning is-outlined has-text-dark favorites-filter mr-5" data-type="group">
                    <span class="icon">
                        <i class="fas fa-users"></i>
                    </span>
                    <span>Groups</span>
                </a>
            }
            @if(hasSearches && (hasReports || hasCollections || hasInitiatives||hasTerms || hasGroups || hasUsers)){
                <a class="button is-warning is-outlined has-text-dark favorites-filter mr-5" data-type="search">
                    <span class="icon">
                        <i class="fas fa-magnifying-glass"></i>
                    </span>
                    <span>Searches</span>
                </a>
            }
        </section>

        <div class="columns">
           @{
               var total = Model.Reports.Count() + Model.Collections.Count() + Model.Initiatives.Count() + Model.Terms.Count() + Model.Users.Count() + Model.Searches.Count() + Model.Groups.Count();
               var unsorted_total = Model.Reports.Count(x => x.Folderid== null) + Model.Collections.Count(x => x.Folderid== null) + Model.Initiatives.Count(x => x.Folderid== null) + Model.Terms.Count(x => x.Folderid== null) + Model.Users.Count(x => x.Folderid== null) + Model.Searches.Count(x => x.Folderid== null) + Model.Groups.Count(x => x.Folderid== null);
            }
            <div class="column is-one-quarter is-sticky is-align-self-flex-start">
                <div class="is-relative favorite-folders @if(ViewBag.IsMe){<text>reorder</text>}">
                    <div class="box is-active favorites-show-all is-clickable is-relative" data-folderid="0">
                        <div class="icon-text">
                            <span class="icon mr-5 is-relative">
                                <i class="fas fa-folder-open fa-lg"></i>
                                <span class="tag fav-count is-primary is-rounded">@total</span>
                            </span>
                            <span>All</span>
                        </div>
                        @if (ViewBag.IsMe || User.HasPermission("Edit Other Users"))
                        {
                            <div class="favorite-folder-controls button is-light is-rounded is-warning has-text-dark is-active">
                                <span class="icon js-modal-trigger" data-target="favorite-folder-new"><i class="fas fa-plus"></i></span>
                            </div>
                            <script>
                                console.log("at function");
                                (function(){
                                    document.querySelector('body').insertAdjacentHTML('beforeend', '<div class="modal" id="favorite-folder-new"> \
                                    <div class="modal-background"></div> \
                                    <div class="modal-content"> \
                                        <div class="box"> \
                                            <strong class="mb-5">New Folder</strong> \
                                            <form method="post" action="/Users/stars/?handler=NewFolder" class="favorite-folder-new">  \
                                                <div class="field"> \
                                                    <div class="control"> \
                                                        <input class="input" name="favorite-folder-name"/> \
                                                    </div> \
                                                </div> \
                                                    <button class="button pt-3">Save</button> \
                                            </form> \
                                        </div> \
                                    </div> \
                                    <button class="modal-close is-large" aria-label="close"></button> \
                                </div>')
                                })()
                            </script>
                        }
                    </div>

                    @if(Model.Folders.Count > 0 && unsorted_total > 0){



                        <div class="box favorites-show-unsorted is-clickable is-relative" data-folderid="">
                            <div class="icon-text">
                                <span class="icon mr-5 is-relative">
                                    <i class="fas fa-folder fa-lg"></i>
                                    <span class="tag fav-count is-primary is-rounded">@unsorted_total</span>
                                </span>
                                <span>Unsorted</span>
                            </div>
                        </div>
                    }

                    @foreach (var f in Model.Folders.OrderBy(x => x.FolderRank).ToList())
                    {
                        var folder_total = f.StarredCollections.Count() + f.StarredGroups.Count() + f.StarredInitiatives.Count() + f.StarredReports.Count() + f.StarredSearches.Count() + f.StarredTerms.Count() + f.StarredUsers.Count();
                        <div class="box favorites-folder is-clickable @if(ViewBag.IsMe){<text>drg</text>} is-relative" data-folderid="@f.UserFavoriteFolderId" folder-rank="@if(f.FolderRank>0){@f.FolderRank} else {<text>999</text>}">
                            <div class="is-flex is-flex-direction-row is-justify-content-space-between">
                                <div class="icon-text">
                                    <span class="icon mr-5 is-relative">
                                        <i class="fas fa-folder fa-lg"></i>
                                        <span class="tag fav-count is-primary is-rounded">@folder_total</span>
                                    </span>
                                    <span class="favorite-folder-name">@f.FolderName</span>
                                </div>


                            </div>
                            @if (ViewBag.IsMe || User.HasPermission("Edit Other Users"))
                            {
                                <div class="favorite-folder-controls button is-light is-rounded is-warning has-text-dark is-active">
                                    <span class="icon js-modal-trigger" data-target="favorite-folder-@f.UserFavoriteFolderId"><i class="fas fa-pen-to-square"></i></span>
                                    <span class="icon favorite-folder-delete" data-folderid="@f.UserFavoriteFolderId"><i class="fas fa-trash"></i></span>
                                    <span class="icon drg-hdl"><i class="fas fa-up-down-left-right"></i></span>
                                </div>
                                <script>
                                    (function(){
                                        document.querySelector('body').insertAdjacentHTML('beforeend', '<div class="modal" id="favorite-folder-@f.UserFavoriteFolderId"> \
                                        <div class="modal-background"></div> \
                                        <div class="modal-content"> \
                                            <div class="box"> \
                                                <strong class="mb-5">Rename Folder</strong> \
                                                <form method="post" action="/Users/stars/?handler=EditFolder&id=@f.UserFavoriteFolderId" class="favorite-folder-rename" data-folderid="@f.UserFavoriteFolderId"> \
                                                    <div class="field"> \
                                                        <div class="control"> \
                                                            <input class="input" name="favorite-folder-name" value="@f.FolderName" /> \
                                                        </div> \
                                                    </div> \
                                                     <button class="button pt-3">Save</button> \
                                                </form> \
                                            </div> \
                                        </div> \
                                        <button class="modal-close is-large" aria-label="close"></button> \
                                    </div>')
                                    })()
                                </script>
                            }
                        </div>
                    }
                </div>
            </div>

            <div class="column favorites">
                <div class="columns is-multiline reorder">

                    @foreach (var t in Model.Reports.OrderBy(x => x.Rank).ToList())
                    {
                        <div class="column is-full favorite report @if(ViewBag.IsMe){<text>drg</text>} is-relative" data-rank="@t.Rank" data-folderid="@t.Folderid" data-favoriteid="@t.StarId" data-type="report">
                            @if(ViewBag.IsMe){
                                <button class="favorite-reorder button is-light is-rounded is-warning has-text-dark is-active drg-hdl" type="button">
                                    <span class="icon">
                                        <i class="fas fa-up-down-left-right"></i>
                                    </span>
                                </button>
                            }
                            <partial name="Reports/_Snippet" model="t.Report" />
                        </div>
                    }
                    @foreach (var t in Model.Collections.OrderBy(x => x.Rank).ToList())
                    {
                        <div class="column is-full favorite collection @if(ViewBag.IsMe){<text>drg</text>} is-relative" data-rank="@t.Rank" data-folderid="@t.Folderid" data-favoriteid="@t.StarId" data-type="collection">
                            @if(ViewBag.IsMe)
                            {
                                <button class="favorite-reorder button is-light is-rounded is-warning has-text-dark is-active drg-hdl" type="button">
                                    <span class="icon">
                                        <i class="fas fa-up-down-left-right"></i>
                                    </span>
                                </button>
                            }
                            <partial name="Collections/_Snippet" model="t.Collection" />
                        </div>
                    }
                    @foreach (var t in Model.Initiatives.OrderBy(x => x.Rank).ToList())
                    {
                        <div class="column is-full favorite initiative @if(ViewBag.IsMe){<text>drg</text>} is-relative" data-rank="@t.Rank" data-folderid="@t.Folderid" data-favoriteid="@t.StarId" data-type="initiative">
                            @if(ViewBag.IsMe)
                            {
                                <button class="favorite-reorder button is-light is-rounded is-warning has-text-dark is-active drg-hdl" type="button">
                                    <span class="icon">
                                        <i class="fas fa-up-down-left-right"></i>
                                    </span>
                                </button>
                            }
                            <partial name="Initiatives/_Snippet" model="t.Initiative" />
                        </div>
                    }
                    @foreach (var t in Model.Terms.OrderBy(x => x.Rank).ToList())
                    {
                        <div class="column is-full favorite term @if(ViewBag.IsMe){<text>drg</text>} is-relative" data-rank="@t.Rank" data-folderid="@t.Folderid" data-favoriteid="@t.StarId" data-type="term">
                            @if(ViewBag.IsMe)
                            {
                                <button class="favorite-reorder button is-light is-rounded is-warning has-text-dark is-active drg-hdl" type="button">
                                    <span class="icon">
                                        <i class="fas fa-up-down-left-right"></i>
                                    </span>
                                </button>
                            }
                            <partial name="Terms/_Snippet" model="t.Term" />
                        </div>
                    }
                    @foreach (var t in Model.Users.OrderBy(x => x.Rank).ToList())
                    {
                        <div class="column is-full favorite user @if(ViewBag.IsMe){<text>drg</text>} is-relative" data-rank="@t.Rank" data-folderid="@t.Folderid" data-favoriteid="@t.StarId" data-type="user">
                            @if(ViewBag.IsMe)
                            {
                                <button class="favorite-reorder button is-light is-rounded is-warning has-text-dark is-active drg-hdl" type="button">
                                    <span class="icon">
                                        <i class="fas fa-up-down-left-right"></i>
                                    </span>
                                </button>
                            }
                            <partial name="Users/_Snippet" model="t.User" />
                        </div>
                    }
                    @foreach (var t in Model.Groups.OrderBy(x => x.Rank).ToList())
                    {
                        <div class="column is-full favorite group @if(ViewBag.IsMe){<text>drg</text>} is-relative" data-rank="@t.Rank" data-folderid="@t.Folderid" data-favoriteid="@t.StarId" data-type="group">
                            @if(ViewBag.IsMe)
                            {
                                <button class="favorite-reorder button is-light is-rounded is-warning has-text-dark is-active drg-hdl" type="button">
                                    <span class="icon">
                                        <i class="fas fa-up-down-left-right"></i>
                                    </span>
                                </button>
                            }
                            <partial name="Groups/_Snippet" model="t.Group" />
                        </div>
                    }
                    @foreach (var t in Model.Searches.OrderBy(x => x.Rank).ToList())
                    {
                        <div class="column is-full favorite search @if(ViewBag.IsMe){<text>drg</text>} is-relative" data-rank="@t.Rank" data-folderid="@t.Folderid" data-favoriteid="@t.StarId" data-type="search">
                            @if(ViewBag.IsMe)
                            {
                                <button class="favorite-reorder button is-light is-rounded is-warning has-text-dark is-active drg-hdl" type="button">
                                    <span class="icon">
                                        <i class="fas fa-up-down-left-right"></i>
                                    </span>
                                </button>
                            }
                            <partial name="Search/_Snippet" model="t" />
                        </div>
                    }
                </div>
                <script>
                    (function() {

                        // set the order correctly
                        var favs = Array.prototype.slice.call(document.querySelectorAll('.favorites .favorite')).sort(function comp($a, $b){
                            return +$a.dataset.rank - +$b.dataset.rank;
                        });

                        for (var i = 0; i < favs.length; i++) {
                            favs[i].parentElement.appendChild(favs[i]);
                        }
                    })()
                </script>
            </div>
        </div>
    } else if (Model.RunReports != null && Model.RunReports.Count > 0) {
        <h3 class="title is-3" id="reports">You don't have any favorites! Here's some reports you've used.</h3>
        <div class="columns is-multiline">
            @foreach (var t in Model.RunReports.ToList())
            {
                <div class="column is-half ">
                    <partial name="Reports/_Snippet" model="t" />
                </div>
            }
        </div>
    } else {
        <p>You don't have any favorites! Search to get started.</p>
    }
</div>
